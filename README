RNID SIP STACK
==============

This library of code consists of three main parts:
* a SIP stack (RFC 3261),
* an RTP stack (RFC 3550), and
* SDP (RFC 2327) parsing and utilities.

The code currently implements most of SIP, RTP. The stack can make and receive
calls from/to X-Lite, linphonec. It also connects correctly with ser, the Sip
Express Router.

The stack uses Indy 9.0.14 (but 9.0.18 should work fine). Find this
excellent library either in your Delphi\Sources\Indy directory or at
http://www.indyproject.org/

All test code relies on the DUnit test framework. See
http://dunit.sourceforge.net/ for details.

Of the stuff not implemented, the most important missing bits include:
 * S/MIME;
 * proxy classes

The main interface to the stack - the interface you want to use to USE
the stack, as opposed to extend the stack - is in
src\IdSipStackInterface.

If you're interested in hacking the stack, take a look at the Spike
class in tests\Spike.pas. It does a lot of stuff, and it's definitely
"alpha" quality, but it's what I use to try out SIP stuff. I plan to
simplify Spike to ease the reader into the ways of SIP.

Please note that this version, 0.4, has a radically different
threading architecture to version 0.3 Please read the CHANGES file,
doc\overview.txt and doc\architecture.txt!

Todo:
* The User Agent knows about what kinds of actions it supports. We
  need to pull this knowledge out into separate OutboundModules, much
  like the existing inbound MessageModules.

Known bugs:
* TLS tests fail because of something to do with the certificates.
* There are still some subtle race conditions in the transport. When
  they occur, they're quite uncomfortable because the
  TId(TCP|UDP)Servers then don't deactivate, and the program appears
  to hang after you close it.

Frank Shearar, 2005/05/19