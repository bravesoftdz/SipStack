RFC 3265 still to do:

   3.3.1.   Detecting support for SUBSCRIBE and NOTIFY............. 18
   3.3.5.   State Agents and Notifier Migration.................... 19  [Unnecessary for CC transfer]
   3.3.6.   Polling Resource State................................. 20  [Optional behaviour]
   3.3.8.   PINT Compatibility..................................... 21  [MAY strength; fairly irrelevant]
   5.       Security Considerations................................ 28
   5.1.     Access Control......................................... 28
   5.2.     Notifier Privacy Mechanism............................. 28
   5.3.     Denial-of-Service attacks.............................. 28
   5.4.     Replay Attacks......................................... 29
   5.5.     Man-in-the middle attacks.............................. 29
   5.6.     Confidentiality........................................ 29

3.1.4.4. Confirmation of Subscription Creation

   The subscriber can expect to receive a NOTIFY message from each node
   which has processed a successful subscription or subscription
   refresh.  Until the first NOTIFY message arrives, the subscriber
   should consider the state of the subscribed resource to be in a
   neutral state.  Documents which define new event packages MUST define
   this "neutral state" in such a way that makes sense for their
   application (see section 4.4.7.).

3.1.6.1. Initial SUBSCRIBE Transaction Processing

   The notifier SHOULD also perform any necessary authentication and
   authorization per its local policy.  See section 3.1.6.3.

3.1.6.3. Authentication/Authorization of SUBSCRIBE requests

3.2.1. Identification of Reported Events, Event Classes, and Current
       State

   Event packages may define semantics associated with the body of their
   NOTIFY requests; if they do so, those semantics apply.  NOTIFY bodies
   are expected to provide additional details about the nature of the
   event which has occurred and the resultant resource state.

   When present, the body of the NOTIFY request MUST be formatted into
   one of the body formats specified in the "Accept" header of the
   corresponding SUBSCRIBE request.  This body will contain either the
   state of the subscribed resource or a pointer to such state in the
   form of a URI (see section 4.4.13).

3.3.4. Dialog creation and termination
   Multiple subscriptions can be associated with a single dialog.
   Subscriptions may also exist in dialogs associated with INVITE-
   created application state and other application state created by
   mechanisms defined in other specifications.  These sets of
   application state do not interact beyond the behavior described for a
   dialog (e.g., route set handling).


RFC 3515 still to do:

            2.4.4 Using SIP Events to Report the Results
                  of the Reference. . . . . . . . . . . . . . . . .  7
            2.4.6 Multiple REFER Requests in a Dialog . . . . . . .  9
       2.5  Behavior of SIP Registrars/Redirect Servers . . . . . .  9
       2.6  Behavior of SIP Proxies . . . . . . . . . . . . . . . . 10
   5.  Security Considerations  . . . . . . . . . . . . . . . . . . 16
       5.1  Constructing a Refer-To URI . . . . . . . . . . . . . . 16
       5.2  Authorization Considerations for REFER. . . . . . . . . 17
       5.3  Considerations for the use of message/sipfrag . . . . . 18
            5.3.1 Circumventing Privacy . . . . . . . . . . . . . . 18
            5.3.2 Circumventing Confidentiality . . . . . . . . . . 19
            5.3.3 Limiting the Breach . . . . . . . . . . . . . . . 19
            5.3.4 Cut, Paste and Replay Considerations. . . . . . . 19

2.4.2 Processing a REFER request

   A UA accepting a well-formed REFER request SHOULD request approval
   from the user to proceed (this request could be satisfied with an
   interactive query or through accessing configured policy).  If
   approval is granted, the UA MUST contact the resource identified by
   the URI in the Refer-To header field value as discussed in Section
   2.4.3.

   If the approval sought above for a well-formed REFER request is
   immediately denied, the UA MAY decline the request.

[We already notify the UI of inbound subscriptions:
OnSubscriptionRequest. The UI in turn accesses the referred resource
in an appropriate manner.]

2.4.4 Using SIP Events to Report the Results of the Reference

   <snip> In particular, an agent acting on a REFER request SHOULD
   NOT issue a CANCEL to any referenced SIP requests because the agent
   sending the REFER terminated its subscription to the refer event
   before the referenced request completes.

2.4.7 Using the Subscription-State Header Field with Event Refer

   In the case where a REFER was accepted with a 202, but approval to
   follow the reference was subsequently denied, the reason and retry-
   after elements of the Subscription-State header field can be used to
   indicate if and when the REFER can be re-attempted (as described for
   SUBSCRIBE in [2]).


RFC 3891 still to do:

   3.  User Agent Server Behavior: Receiving a Replaces Header . . .   4
   4.  User Agent Client Behavior: Sending a Replaces Header . . . .   6
   5.  Proxy Behavior. . . . . . . . . . . . . . . . . . . . . . . .   7
   6.  Syntax. . . . . . . . . . . . . . . . . . . . . . . . . . . .   7
       6.1.  The Replaces Header . . . . . . . . . . . . . . . . . .   7
       6.2.  New Option Tag for Require and Supported Headers. . . .   8


Notes:
SUBSCRIBE & REFER both act a bit like sessions: different messages, of
different methods, relate to the same thing.

4.  User Agent Client Behavior: Sending a Replaces Header

   A User Agent that wishes to replace a single existing early or
   confirmed dialog with a new dialog of its own, MAY send the target
   User Agent an INVITE request containing a Replaces header field.  The
   User Agent Client (UAC) places the Call-ID, to-tag, and from-tag
   information for the target dialog in a single Replaces header field
   and sends the new INVITE to the target.  If the user agent only
   wishes to replace an early dialog (as in the Call Pickup example in
   Section 7.1), the UAC MAY also include the "early-only" parameter in
   the Replaces header field.  A UAC MUST NOT send an INVITE with a
   Replaces header field that attempts to replace an early dialog which
   was not originated by the target of the INVITE with a Replaces header
   field.

   Note that use of this mechanism does not provide a way to match
   multiple dialogs, nor does it provide a way to match an entire call,
   an entire transaction, or to follow a chain of proxy forking logic.
   For example, if Alice replaces Cathy in an early dialog with Bob, but
   Bob does not answer, Alice's replacement request will not match other
   dialogs to which Bob's UA redirects, nor other branches to which his
   proxy forwards.  Although this specification takes reasonable
   precautions to prevent unexpected behavior in the face of forking,
   implementations SHOULD only address replacement requests (i.e., set
   the Request-URI of the replacement request) to the SIP Contact URI of
   the target.
